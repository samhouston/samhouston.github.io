SHACS GAMING JAVASCRIPT WEBINAR

WRITTEN AND CREATED BY EDUARDO DE LUNA

OBJECTIVES, SUBJECTS AND COURSE METHODOLOGY

OBJECTIVES:

- To familiarize students with the history, uses, and syntax of the Javascript Programming Language

- To convey to students, familiar with the use of Java and/or Python, the differences between it and Javascript, with particular emphasis on prototypal inheritance

- To introduce students to advanced techniques and pratical applications of the Javascript Programming Language

- To pique attendant's interest on the potential of Javascript as a capable programming language for their future endeavours


SUBJECTS:

A Brief History of JS
	The work of Brendan Eich and the beginnings of JS
	
	The browser war with Microsoft
	The participation of ECMA International
	Douglas Crockford and the creation of JSON
	AJAX: The game changer of JS
	JS as a result of its history
	Further Information: Crockford on Javascript - History of Javascript

How to Use and Code JS
	Using the Console as Integrated Development Environment
	Using the <script> tag
		Ability of concacenating multiple script files
	JavaScript Editey for Google Chrome
	Scratchpad for Mozilla Aurora
	JSFiddle.net, Codepen.io, and Runnable.net
	IDEs: Sublime Text and JetBrains WebStorm

Javascript Essentials
	Javascript Syntax
	Everything is an Object
	Dynamic Typing
	Variable Scope
	Strings and Arrays
	The "this" object
	Methods as Objects (mention)
	What stands for false and true
	The concept of NaN
	Javascript Object Notation
	The Window/Global Object
	Importance of Private Namespaces
	Further Information: Crockford on Javascript - And Then there was Javascript

Prototypal Inheritance: The heart of JS
	The loss of Classes, Interfaces, and Constructors
	What is prototypal inheritance?
	Constructors vs Prototypes
	Prototype Chaining
	Object Augumentation
	Parasitical Inheritance
	Methods as Objects
	Use of "Class" methods
	Alternatives: Typescript and ECMAScript Harmony
	Further Information: Source Decoded - Prototypes, Prototypal Inheritance done right.

Design Patterns as they Apply to Javascript
	What are Design Patterns?
	The work of the Gang of Four
	Samples of Design Patterns in JS
		Prototypal Inheritance AS A Pattern
		Command Pattern
		State Machine Pattern
		Game Loop Pattern
	Further Information: Head First Design Patterns

External Libraries in JS
	jQuery
	Phaser Game Engine
	Three.js
	CreateJS

Examples of Advanced Uses of JS
	MVC Frameworks
		Backbone.js
		Angular.js
	Imperative Programming
	What's coming in ES Harmony
		Promises
		Generators
	WebGL
	Node.js
		Socket.io
		Nodeuino
		Node-Webkit	
	Apache Cordova
	Further Information: nodeschool.io

Parting Thoughts

CLASS METHODOLOGY:
The conference will be held as a webinar using Google Hangout and Hangouts On Air to broadcast and archive the content on YouTube for later viewing.

Every subject point during the webinar will be covered with a detail explanation designed to be direct and effective.

The audience is expected to have previous knowledge in computer programming, as such the seminar will gloss over simple concepts like data-flow structures, the nature of variables and logical operators.

Every techincal point is to be presented with a live coding example that demonstrates the use of the Javascript feature in question. These examples will be hosted on a GitHub repository for download.

The audience watching live and in the hangout will have the ability to make questions at specific times during the presentation, to clarify any kind of misunderstanding. These questions are to be asked through text only and only made when prompted to by the teacher. This is to facilitate seminar flow and making efficient use of time.